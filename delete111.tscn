[gd_scene load_steps=6 format=2]

[ext_resource path="res://twirl.shader" type="Shader" id=1]
[ext_resource path="res://Menu/backgrounds/worldslogo.png" type="Texture" id=2]

[sub_resource type="ShaderMaterial" id=1]
shader = ExtResource( 1 )

[sub_resource type="Shader" id=2]
code = "shader_type spatial;

const float time = .15;
const float tau = 6.2831853;

mat2 makem2(in float theta)
{
	float c = cos(theta);
	float s = sin(theta);
	return mat2(vec2(c,-s),vec2(s,c));
	}
float noise( in vec2 x )
{
	return texture(SCREEN_TEXTURE, x*.01).x;
}

float fbm(in vec2 p)
{	
vec4 tt=fract(vec4(time*2.)+vec4(0.0,0.25,0.5,0.75));
vec2 p1=p-normalize(p)*tt.x;
vec2 p2=vec2(1.0)+p-normalize(p)*tt.y;
vec2 p3=vec2(2.0)+p-normalize(p)*tt.z;
vec2 p4=vec2(3.0)+p-normalize(p)*tt.w;
vec4 tr=vec4(1.0)-abs(tt-vec4(0.5))*2.0;//*vec4(0.0,1.0,0.0,1.0);
float z=2.;
vec4 rz = vec4(0.);
for (float i= 1.;i < 4.;i++)
{
rz+= abs((vec4(noise(p1),noise(p2),noise(p3),noise(p4))-vec4(0.5))*2.)/z;
z = z*2.;
p1 = p1*2.;
p2 = p2*2.;
p3 = p3*2.;
p4 = p4*2.;
}
return dot(rz,tr)*0.25;
}
float dualfbm(in vec2 p)
{
    //get two rotated fbm calls and displace the domain
	vec2 p2 = p*.7;
	vec2 basis = vec2(fbm(p2-time*1.6),fbm(p2+time*1.7));
	basis = (basis-.5)*.2;
	p += basis;
	
	//coloring
	return fbm(p); //*makem2(time*2.0));
}

float circ(vec2 p) 
{
	float r = length(p);
	r = log(sqrt(r));
	return abs(mod(r*2.,tau)-4.54)*3.+.5;

}

void mainImage( out vec4 fragColor, in vec2 fragCoord )
{
	//setup system
	vec2 uv = fragCoord.xy / iResolution.xy-0.5;
	uv.x *= iResolution.x/iResolution.y;
	vec2 p = uv * 4.;
	
    float rz = dualfbm(p);
	
	//rings
	//p /= 7.0; //exp(mod(time*10.,3.14159));
	//rz *= pow(abs((0.0-circ(p))),.99);
    
    rz *= abs((-circ(vec2(p.x / 4.2, p.y / 7.0))));
    rz *= abs((-circ(vec2(p.x / 4.2, p.y / 7.0))));
    rz *= abs((-circ(vec2(p.x / 4.2, p.y / 7.0))));
	
	//final color
	vec4 col = vec4(.1,0.1,0.4, 0.05)/rz;
	col=pow(abs(col),vec4(.99));
    vec4 bg = texture(iChannel1, uv);
	fragColor = vec4((col.rgb*col.a + bg.rgb*(1.0-col.a)),1.0);
}"

[sub_resource type="ShaderMaterial" id=3]
shader = SubResource( 2 )

[node name="Spatial" type="Control"]
material = SubResource( 1 )
anchor_right = 1.0
anchor_bottom = 1.0
margin_left = 199.725
margin_top = 131.819
margin_right = 199.725
margin_bottom = 131.819
__meta__ = {
"_edit_use_anchors_": false
}

[node name="TextureRect" type="TextureRect" parent="."]
material = SubResource( 3 )
margin_right = 961.0
margin_bottom = 414.0
texture = ExtResource( 2 )
expand = true
